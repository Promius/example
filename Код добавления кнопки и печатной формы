
&После("ДобавитьКомандыПечати")
Процедура ИК_ДобавитьКомандыПечати(КомандыПечати)

	// Наша новая печатная форма
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ЗаявлениеНаУвольнение";
	КомандаПечати.Представление = НСтр("ru = 'Заявление на увольнение'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 190;
	
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.Идентификатор = "Госпошлина";
	//КомандаПечати.Представление = НСтр("ru = 'Уплата госпошлины'");
	//КомандаПечати.Обработчик    = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
	//КомандаПечати.Порядок = 200;

	
	
КонецПроцедуры

&После("Печать")
Процедура ИК_Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода, СписокСотрудников = Неопределено)

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗаявлениеНаУвольнение") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"ЗаявлениеНаУвольнение",
			НСтр("ru = 'Заявление на увольнение'"),
		ПечатьУвольнения(МассивОбъектов, ОбъектыПечати));
		
	КонецЕсли;
	
	//Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Госпошлина") Тогда
	//	УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
	//	"Госпошлина",
	//	НСтр("ru = 'Уплата госпошлины'"),
	//	ПечатьУвольнения(МассивОбъектов, ОбъектыПечати));
	//	
	//КонецЕсли;

	
КонецПроцедуры

Функция ПечатьУвольнения(МассивОбъектов, ОбъектыПечати)
	
	// Типовой аналогичный код
	
	// Определяем таблицу значений с полями
	ПрогулНеявкаДок = Новый ТаблицаЗначений;
	ПрогулНеявкаДок.Колонки.Добавить("Организация", 	Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ПрогулНеявкаДок.Колонки.Добавить("ФизическоеЛицо", 	Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	ПрогулНеявкаДок.Колонки.Добавить("Сотрудник",  		Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	ПрогулНеявкаДок.Колонки.Добавить("Номер", 			Новый ОписаниеТипов("Строка"));
	ПрогулНеявкаДок.Колонки.Добавить("Дата", 			Новый ОписаниеТипов("Дата"));
	ПрогулНеявкаДок.Колонки.Добавить("Ссылка", 			Новый ОписаниеТипов("ДокументСсылка.Увольнение"));
	
	Для Каждого Строка Из МассивОбъектов Цикл
		НоваяСтрока = ПрогулНеявкаДок.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка); 
	КонецЦикла;
	
	// Формируем табличный документ
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.КлючПараметровПечати = "ПФ_MXL_БланкЗаявленияНаУвольнение_шаблонТД";
	
	// Определение макета
	МакетЗаявления 		= УправлениеПечатью.МакетПечатнойФормы("Документ.Увольнение.ПФ_MXL_БланкЗаявленияНаУвольнение_шаблонТД");
	ОбластьШапкаЛоготип = МакетЗаявления.ПолучитьОбласть("ШапкаЛоготип");
	ОбластьШапка 		= МакетЗаявления.ПолучитьОбласть("Шапка");
	ОбластьТело 		= МакетЗаявления.ПолучитьОбласть("Тело");
	ОбластьПодвал 		= МакетЗаявления.ПолучитьОбласть("Подвал");
	
	// Создание запроса
	Запрос = Новый Запрос;
	Запрос.Текст = 
	    "ВЫБРАТЬ
	    |	ПрогулНеявкаДок.Организация КАК Организация,
	    |	ПрогулНеявкаДок.Сотрудник КАК Сотрудник,
		|	ПрогулНеявкаДок.ФизическоеЛицо КАК ФизическоеЛицо,
	    |	ПрогулНеявкаДок.Дата КАК Дата,
	    |	ПрогулНеявкаДок.Номер КАК Номер,
		|	ПрогулНеявкаДок.Ссылка КАК Ссылка
		|	ПОМЕСТИТЬ ПрогулНеявкаДок 
		|ИЗ
		|	&ПрогулНеявкаДок КАК ПрогулНеявкаДок
		|;
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПрогулНеявкаДок.Дата КАК Дата,
	    |	ПрогулНеявкаДок.Номер КАК Номер,
		|	ПрогулНеявкаДок.Организация.НаименованиеСокращенное КАК ОргСокрНаименование,
		|	ПрогулНеявкаДок.Организация.НаименованиеПолное КАК ОргПолноеНаименование,
		|	ПрогулНеявкаДок.Организация.КодПоОКПО КАК ОргОКПО,
		|	ПрогулНеявкаДок.Организация.ОГРН КАК ОргОГРН,
		|	ПрогулНеявкаДок.Организация.ИНН КАК ОргИНН,
		|	ПрогулНеявкаДок.Организация.РегистрацияВНалоговомОргане.КПП КАК ОргКПП,
	    |	ПрогулНеявкаДок.Сотрудник КАК Сотрудник,
		|	ПрогулНеявкаДок.ФизическоеЛицо,		
		|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение КАК Подразделение,
		|	КадроваяИсторияСотрудниковСрезПоследних.Должность КАК Должность,
	    |	ПрогулНеявкаДок.Организация.КонтактнаяИнформация.(
	    |		МАКСИМУМ(ВЫБОР
	    |				КОГДА ПрогулНеявкаДок.Организация.КонтактнаяИнформация.Вид.Наименование = &ЮрАдрес
	    |					ТОГДА ПрогулНеявкаДок.Организация.КонтактнаяИнформация.Представление
	    |			КОНЕЦ) КАК ОргАдрес,
	    |		МАКСИМУМ(ВЫБОР
	    |				КОГДА ПрогулНеявкаДок.Организация.КонтактнаяИнформация.Вид.Наименование = &Телефон
	    |					ТОГДА ПрогулНеявкаДок.Организация.КонтактнаяИнформация.Представление
	    |			КОНЕЦ) КАК ОргТелефон,
	    |		МАКСИМУМ(ВЫБОР
	    |				КОГДА ПрогулНеявкаДок.Организация.КонтактнаяИнформация.Вид.Наименование = &Email
	    |					ТОГДА ПрогулНеявкаДок.Организация.КонтактнаяИнформация.Представление
	    |			КОНЕЦ) КАК ОргЭлПочта
	    |	) КАК ОргАдрес,
	    |	СведенияОбОтветственныхЛицахСрезПоследних.Руководитель КАК Руководитель,
		|	ПрогулНеявкаДок.Ссылка КАК ПрогулНеявкаСсылка
	    |ИЗ
	    |	ПрогулНеявкаДок КАК ПрогулНеявкаДок
	    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбОтветственныхЛицах.СрезПоследних КАК СведенияОбОтветственныхЛицахСрезПоследних
	    |		ПО ПрогулНеявкаДок.Организация = СведенияОбОтветственныхЛицахСрезПоследних.Организация
	    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних КАК КадроваяИсторияСотрудниковСрезПоследних
	    |		ПО ПрогулНеявкаДок.Сотрудник = КадроваяИсторияСотрудниковСрезПоследних.Сотрудник";
	
	Запрос.Параметры.Вставить("ПрогулНеявкаДок", ПрогулНеявкаДок);
	Запрос.Параметры.Вставить("ЮрАдрес", "Юридический адрес");
	Запрос.Параметры.Вставить("Телефон", "Телефон");
	Запрос.Параметры.Вставить("Email", "Email");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		//ПоказатьПредупреждение(,"Документ не проведен. Печать недоступна",, "Информация");
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Документ не проведен. Печать недоступна";
		Сообщение.Сообщить();
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда 
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Блок логотипа, доделать
		
		//Логотип = ИК_ОбщиеПроцедурыИФункции.ПолучитьЛоготипПоИННОрганизации(Выборка.ОргИНН); 
		//Если Логотип <> Неопределено Тогда 
		//	ОбластьШапкаЛоготип.Рисунки.Логотип.Картинка = Логотип;
		//КонецЕсли;	
		//ТабличныйДокумент.Вывести(ОбластьШапкаЛоготип);
		
		ОргРуководитель 		= ИК_ОбщиеПроцедурыИФункции.ОбработатьСтроку(Выборка.Руководитель, "Именительный", Истина);
		ОргРуководительТП 		= ИК_ОбщиеПроцедурыИФункции.ОбработатьСтроку(Выборка.Руководитель, "Творительный", Истина);
		ФИОИм 					= ИК_ОбщиеПроцедурыИФункции.ОбработатьСтроку(Выборка.ФизическоеЛицо, "Именительный", Истина);
		ФИОРод 					= ИК_ОбщиеПроцедурыИФункции.ОбработатьСтроку(Выборка.ФизическоеЛицо, "Родительный", Истина);
		ФИОТв 					= ИК_ОбщиеПроцедурыИФункции.ОбработатьСтроку(Выборка.ФизическоеЛицо, "Творительный", Истина);
		Должность				= ИК_ОбщиеПроцедурыИФункции.ОбработатьСтроку(Выборка.Должность, "Именительный", Ложь);
		Подразделение 			= ИК_ОбщиеПроцедурыИФункции.ОбработатьСтроку(Выборка.Подразделение, "Родительный", Ложь);
		
		// Формируем структуру
		Данные = Новый Структура;
		Данные.Вставить("ОргСокрНаименование", 		Выборка.ОргСокрНаименование);
		//Данные.Вставить("ОргПолноеНаименование", 	Выборка.ОргПолноеНаименование);
		//Данные.Вставить("ОргАдрес", 	?(Выборка.ОргАдрес.Выгрузить()[0]=Неопределено,"",Выборка.ОргАдрес.Выгрузить()[0].ОргАдрес));
		//Данные.Вставить("ОргТелефон", 	?(Выборка.ОргАдрес.Выгрузить()[0]=Неопределено,"",Выборка.ОргАдрес.Выгрузить()[0].ОргТелефон));
		//Данные.Вставить("ОргЭлПочта", 	?(Выборка.ОргАдрес.Выгрузить()[0]=Неопределено,"",Выборка.ОргАдрес.Выгрузить()[0].ОргЭлПочта));
		//Данные.Вставить("ОргОКПО", 	Выборка.ОргОКПО);
		//Данные.Вставить("ОргОГРН", 	Выборка.ОргОГРН);
		//Данные.Вставить("ОргИНН", 	Выборка.ОргИНН);
		//Данные.Вставить("ОргКПП", 	Выборка.ОргКПП);  	
		//Данные.Вставить("ФИОИм", 				ФИОИм);
		//Данные.Вставить("ФИОРод", 				ФИОРод);
		//Данные.Вставить("ФИОТв", 				ФИОТв);
		//Данные.Вставить("Должность", Должность);
		//Данные.Вставить("Подразделение", Подразделение);
		//Данные.Вставить("ОргРуководитель", ОргРуководитель);
		//Данные.Вставить("ОргРуководительТП", ОргРуководительТП); 
		//Данные.Вставить("Дата", "" + Формат(Выборка.Дата,"ДЛФ=D") + " " + "г. ");
		
		// Вывод в табличный документ
		ЗаполнитьЗначенияСвойств(ОбластьШапка.Параметры, Данные); 
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		ЗаполнитьЗначенияСвойств(ОбластьТело.Параметры, Данные); 
		ТабличныйДокумент.Вывести(ОбластьТело);
		
		ЗаполнитьЗначенияСвойств(ОбластьПодвал.Параметры, Данные); 
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Выборка.ПрогулНеявкаСсылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

